x-spark-common: &spark-common
  #image: bitnami/spark:3.5.4
  build: 
      context: .
      dockerfile: Dockerfile.spark
  volumes:
    - ./jobs:/home/sparkuser/spark/jobs
  command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
  depends_on:
    - spark-master
  environment:
    SPARK_MODE: Worker
    SPARK_WORKER_CORES: 2
    SPARK_WORKER_MEMORY: 3g
    SPARK_MASTER_URL: spark://spark-master:7077 

services:
  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEBUG=1
      - AWS_ACCESS_KEY_ID=localstack
      - AWS_SECRET_ACCESS_KEY=localstack
    networks:
      - streamsnet

  init-s3:
    image: amazon/aws-cli:2.4.9
    restart: on-failure
    volumes:
      - ./script:/script/
    environment:
      AWS_ACCESS_KEY_ID: "localstack"
      AWS_SECRET_ACCESS_KEY: "localstack"
      AWS_DEFAULT_REGION: "us-east-1"
      AWS_S3_ENDPOINT: "localstack:4566"
      BUCKET: "spark-streaming-data"
    entrypoint: /bin/sh -c
    command: [ 'sh /script/setup-s3.sh' ]
    depends_on:
      - localstack
    healthcheck:
      test: [
          "CMD",
          "sh",
          "-c",
          "AWS_ACCESS_KEY_ID=localstack
          && AWS_SECRET_ACCESS_KEY=localstack
          && AWS_DEFAULT_REGION=us-east-1
          && aws --endpoint-url=http://localstack:4566 s3 ls
          && aws --endpoint-url=http://localstack:4566 s3 spark-streaming-data"]
      interval: 2s
      timeout: 20s
      retries: 10
    networks:
      - streamsnet
      
  broker:
    image: confluentinc/cp-kafka:7.4.4
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      retries: 10
      start_period: 10s
    networks:
      - streamsnet

  zookeeper:
    image: bitnami/zookeeper:3.8.4
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN : yes
    healthcheck:
      test: ['CMD', 'bash', '-c', "echo 'ruok' | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - streamsnet

  spark-master:
    container_name: spark-master
    build: 
      context: .
      dockerfile: Dockerfile.spark
    #image: bitnami/spark:latest
    volumes:
      - ./jobs:/home/sparkuser/spark/jobs
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "9090:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
    networks:
      - streamsnet
  
  spark-worker-1:
    <<: *spark-common
    container_name: spark-worker-1
    networks:
      - streamsnet

  spark-worker-2:
    <<: *spark-common
    container_name: spark-worker-2
    networks:
      - streamsnet

networks:
  streamsnet: